<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="probando">
    <property environment="env"/>
	
    <!--<property name="gwt.home" value="${env.GWT_2_6_0_HOME}" /> -->
	 <!-- <property name="gwt.home" value="${env.GWT_2_1_0_HOME}" /> -->
	<property name="gwt.home" value="../../Descargas Disco D/eclipse-standard-kepler-SR2-win32-x86_64/eclipse/plugins/com.google.gwt.eclipse.sdkbundle_2.6.0/gwt-2.6.0" />
    
	<property name="web-inf_dir" value="${basedir}/war/WEB-INF"/>

    <property name="bin_dir" value="${web-inf_dir}/classes" />
	
    <property name="src_dir" value="${basedir}/src" />
	
    <property name="lib_dir" value="${web-inf_dir}/lib" />
	
	<property name="gwt.clase_principal" value="ar.chris.mecon.Probando" />
	<property name="dist_dir" value="${basedir}/paquetizacion/dist" />





	
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
	
<!-- Me fijo si está seteada la variable de entorno. -->
	
	<!--
	
	<available file="${gwt.home}" property="gwt.home.present"/>
	
	<target name="env.check" unless="gwt.home.present">
			<fail message="Asegúrese de que GWT_2_6_0_HOME esté seteada apuntando al directorio de instalación de GWT."/>
	    </target>
	    
	    -->
	
<!-- Armo el classpath con las bibliotecas necesarias para compilar -->
		<path id="project.classpath">
	   		<pathelement path="${src_dir}" />
			<!-- El jar dev de GWT -->
			<fileset dir="${gwt.home}">
				<include name="**/gwt-dev.jar" />
			</fileset>
			<!-- Los jars propios de la aplicación, entre los cuales está el gwt-user.jar modificado -->
			<fileset dir="${lib_dir}">
	            <include name="**/*.jar" />
	        </fileset>
	    </path>
	
		
    <path id="GWT SDK [gwt-2.1.0 - 2.1.0].libraryclasspath">
        <pathelement location="../../../../opt/gwt-2.1.0/gwt-user.jar"/>
        <pathelement location="../../../../opt/gwt-2.1.0/gwt-dev.jar"/>
    </path>
    <path id="probando.classpath">
        <pathelement location="war/WEB-INF/classes"/>
        <pathelement location="test-classes"/>
        <path refid="GWT SDK [gwt-2.1.0 - 2.1.0].libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="war/WEB-INF/classes"/>
        <mkdir dir="test-classes"/>
        <copy includeemptydirs="false" todir="war/WEB-INF/classes">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="test-classes">
            <fileset dir="test">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="war/WEB-INF/classes"/>
        <delete dir="test-classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="war/WEB-INF/classes" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="probando.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="test-classes" source="${source}" target="${target}">
            <src path="test"/>
            <classpath refid="probando.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
	
	
	<target name="javac" depends="libs" description="Compile java source">
	        <mkdir dir="${bin_dir}"/>
	        <javac srcdir="${src_dir}"
	        	includes="**"
	        	encoding="utf-8"
	            destdir="${bin_dir}"
	            source="1.6"
	        	target="1.6"
	        	nowarn="true"
	        	includeantruntime="false"
	            debug="true"
	        	debuglevel="lines,vars,source">
	          <classpath refid="project.classpath"/>
	        </javac>
	        <copy todir="${bin_dir}">
	          <fileset dir="${src_dir}" excludes="**/*.java"/>
	        </copy>
	    </target>
	
	<!-- Se compila con GWTCompiler -->
		<target name="compile" depends="javac" description="GWT compile to JavaScript">
		    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
		      <classpath>
		        <pathelement location="${src_dir}"/>
		        <path refid="project.classpath"/>
		      </classpath>
		      <!-- Agregar jvmarg -Xss16M o similar si se ve un StackOverflowError -->
		      <jvmarg value="-Xmx1024M"/>
		      <!-- Argumentos adicionales como -style PRETTY o -logLevel DEBUG -->
		      <arg value="${gwt.clase_principal}"/>
		    </java>
		</target>
	
	
	<!-- Este target genera el WAR para desarrollo o producción (según corresponda). Sólo 
		    depende de compile. Las clases del servidor se supone que ya se encuentran 
		 	compiladas en ${bin_dir} -->
		<target name="war" depends="clean,compile">
			<echo message="--> Empaquetando para ${arch_config}."/>
			<echo message="--> Generando web.xml con la configuración para ${arch_config}"/>
			
			<tstamp/>
			
			<mkdir dir="${dist_dir}"/>
			<zip destfile="${dist_dir}/${ant.project.name}.war" basedir="war"/>
			<echo message="--> Empaquetado para ${arch_config}."/>
		</target>
	
	
	<!-- Copia los jars necesarios de GWT. -->
	    <target name="libs" description="Copy libs to WEB-INF/lib">
	        <mkdir dir="${lib_dir}" />
	        <copy todir="${lib_dir}" file="${gwt.home}/gwt-servlet.jar" />
	            <copy todir="${lib_dir}" file="${gwt.home}/gwt-user.jar"/>
	    </target>
</project>
